#set ($keyField = $field.keyField)
#set ($valueField = $field.valueField)
#set ($valueFieldJsType = ${valueField.unboxedType})
#if ($valueField.isEnum())
#set ($valueFieldJsType = "${valueFieldJsType}.Internal_ClosureEnum")
#end

@jsinterop.annotations.JsMethod(name = "get${field.jsName}Count")
public native int get${field.name}Count();

@jsinterop.annotations.JsMethod(name = "contains${field.jsName}")
public native boolean contains${field.name}(${keyField.unboxedType} key);

@jsinterop.annotations.JsMethod(name = "get${field.jsName}OrThrow")
private native ${valueFieldJsType} internal_get${field.name}OrThrow(
    ${keyField.unboxedType} key);

@jsinterop.annotations.JsOverlay
public final ${valueField.unboxedType} get${field.name}OrThrow(${keyField.unboxedType} key) {
#if ($valueField.isEnum())
  return ${valueFieldJsType}.toEnum(internal_get${field.jsName}OrThrow(key), ${valueField.defaultValue});
#else
  return internal_get${field.jsName}OrThrow(key);
#end
}

@jsinterop.annotations.JsMethod(name = "get${field.jsName}OrDefault")
private native ${valueField.unboxedType} internal_get${field.name}OrDefault(
    ${keyField.unboxedType} key, ${valueFieldJsType} defaultValue);

@jsinterop.annotations.JsOverlay
public final ${valueField.unboxedType} get${field.name}OrDefault(
    ${keyField.unboxedType} key, ${valueField.unboxedType} defaultValue) {
#if ($valueField.isEnum())
  return ${valueFieldJsType}.toEnum(
      internal_get${field.jsName}OrDefault(key, ${valueFieldJsType}.toClosureValue(defaultValue)), $valueField.defaultValue);
#else
  return internal_get${field.jsName}OrDefault(key, defaultValue);
#end
}

@jsinterop.annotations.JsMethod(name = "get${field.jsName}Map")
private native com.google.protobuf.GeneratedMessageLite.Internal_.MapView<${keyField.fieldConverterNativeType}, ${valueField.fieldConverterNativeType}> internal_get${field.name}Map();

@jsinterop.annotations.JsOverlay
public final java.util.Map<${keyField.boxedType}, ${valueField.boxedType}> get${field.name}Map() {
  return com.google.protobuf.GeneratedMessageLite.Internal_.create${keyField.stem()}Keyed${valueField.stemForConvertedFields()}Map(
      internal_get${field.name}Map()${valueField.fieldConverter});
}

