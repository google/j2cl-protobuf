##
## Renders a given message as either an inner or outer class.
##
#parse( "converter.vm" )
#set ($static = 'static')
#if ($descriptor.isTopLevelClass())
  #set ($static = '')
package $descriptor.package;

@javax.annotation.processing.Generated(value = "protoc-j2cl")
#end
#if ($descriptor.isTopLevelMessage())
  @jsinterop.annotations.JsType(isNative=true, name = "$descriptor.jsName", namespace= "$descriptor.jsNameSpace")
#else
  @jsinterop.annotations.JsType(isNative=true)
#end
public $static final class $descriptor.name extends
com.google.protobuf.GeneratedMessageLite<${descriptor.name}, ${descriptor.name}.Builder> {

## render enums
#foreach ($enumDescriptor in $descriptor.enums)
  #parse ('enum.vm')
#end

## render oneofs
#foreach($enumDescriptor in $descriptor.oneOfs)
  #parse ('enum.vm')
#end

## render nested messages
## Note that 'descriptor' below only overrides the value for the local scope of foreach.
#foreach ($descriptor in $descriptor.messages)
  #parse ('message.vm')
#end

protected ${descriptor.name}() {}

public static final native ${descriptor.name} getDefaultInstance();

public native Builder toBuilder();

#foreach ($field in $descriptor.fields)
  public static int ${field.fieldNumberName}_FIELD_NUMBER;
#end

## render fields
#foreach ($field in $descriptor.fields)
  #parse ("$field.getterTemplate($templateNameSuffix)")
#end

##render one of getters
#foreach($oneof in $descriptor.oneOfs)
  #set ($field = $oneof.asField())
  #parse('getter.vm')
#end

## render extensions
#set ($extensions = $descriptor.extensions)
#parse('extension.vm')

@jsinterop.annotations.JsMethod(name = "getDescriptor")
public static native com.google.protobuf.contrib.j2cl.runtime.MiniDescriptor getMiniDescriptor();

public static native Builder newBuilder();

public static native Builder newBuilder($descriptor.name prototype);

#if ($descriptor.isAny())
  #parse('any.vm')
#end

@jsinterop.annotations.JsType(isNative=true)
public static final class Builder extends
    com.google.protobuf.GeneratedMessageLite.Builder<$descriptor.name, Builder> {

  protected Builder() {}

  @jsinterop.annotations.JsOverlay
  public final $descriptor.name getDefaultInstanceForType() {
    return getDefaultInstance();
  }

  @java.lang.Override
  public native $descriptor.name build();

  @java.lang.Override
  public native Builder clone();

## render fields for builder
#foreach ($field in $descriptor.fields)
  #parse ("$field.getterTemplate($templateNameSuffix)")

  @com.google.errorprone.annotations.CanIgnoreReturnValue
  @jsinterop.annotations.JsMethod(name = "clear${field.jsName}")
  public native Builder clear${field.name}();

  #parse("$field.builderTemplate($templateNameSuffix)")

#end
##render one of getters for builder
#foreach($oneof in $descriptor.oneOfs)
  #set ($field = $oneof.asField())
  #parse('getter.vm')
#end
}
}
