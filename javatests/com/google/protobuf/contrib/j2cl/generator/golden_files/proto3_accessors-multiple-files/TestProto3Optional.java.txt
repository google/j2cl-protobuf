package com.google.protobuf.contrib.j2cl.protos;

@javax.annotation.processing.Generated(value = "protoc-j2cl")
@jsinterop.annotations.JsType(
    isNative = true,
    name = "TestProto3Optional",
    namespace = "improto.protobuf.contrib.j2cl.protos")
public final class TestProto3Optional
    extends com.google.protobuf.GeneratedMessageLite<
        TestProto3Optional, TestProto3Optional.Builder> {

  protected TestProto3Optional() {}

  public static final native TestProto3Optional getDefaultInstance();

  public native Builder toBuilder();

  public static int OPTIONAL_INT_FIELD_NUMBER;

  @jsinterop.annotations.JsMethod(name = "hasOptionalInt")
  public native boolean hasOptionalInt();

  @jsinterop.annotations.JsMethod(name = "getOptionalInt")
  public native int getOptionalInt();

  @jsinterop.annotations.JsMethod(name = "getDescriptor")
  public static native com.google.protobuf.contrib.j2cl.runtime.MiniDescriptor getMiniDescriptor();

  public static native Builder newBuilder();

  public static native Builder newBuilder(TestProto3Optional prototype);

  @jsinterop.annotations.JsType(isNative = true)
  public static final class Builder
      extends com.google.protobuf.GeneratedMessageLite.Builder<TestProto3Optional, Builder> {

    protected Builder() {}

    @jsinterop.annotations.JsOverlay
    public final TestProto3Optional getDefaultInstanceForType() {
      return getDefaultInstance();
    }

    @java.lang.Override
    public native TestProto3Optional build();

    @java.lang.Override
    public native Builder clone();

    @jsinterop.annotations.JsMethod(name = "hasOptionalInt")
    public native boolean hasOptionalInt();

    @jsinterop.annotations.JsMethod(name = "getOptionalInt")
    public native int getOptionalInt();

    @com.google.errorprone.annotations.CanIgnoreReturnValue
    @jsinterop.annotations.JsMethod(name = "clearOptionalInt")
    public native Builder clearOptionalInt();

    @com.google.errorprone.annotations.CanIgnoreReturnValue
    @jsinterop.annotations.JsMethod(name = "setOptionalInt")
    public native Builder setOptionalInt(int value);
  }
}
